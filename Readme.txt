Задание 1. Ответьте письменно на вопросы:

1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов?

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с внешним API или базой данных?

Ответы
1. Почему использование тестовых заглушек может быть полезным при написании модульных тестов?
Использование тестовых заглушек (или как говорят опытные ребятки «моков») позволяет изолировать тестируемый код от почти любых внешних зависимостей, это неплохо помогает тестировать только целевой модуль. Этот процесс делает процесс более предсказуемым
2. Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?
Следует использовать мок-объект (mock), он позвляет проверить методы вызовов и аргументы 
3. Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?
Верный ответ STUB которая как раз нужна для возврата определенных значений ну или исключений хэх
4. Какой тип тестовой заглушки вы бы использовали для имитации взаимодействия с внешним API или базой данных?
Для имитации взаимодействия с внешним API или базой данных используется фейк-объект (fake), который представляет собой упрощенную версию реальной системы или компонента и может содержать некоторую функциональность для симуляции поведения внешних систем.
Выполнил студент GB: Манкатаев Э.О.
Преподаватель: Вороновский Роман

Задание 2.

У вас есть класс BookService, который использует интерфейс BookRepository для получения информации о книгах из базы данных. 
Ваша задача написать unit-тесты для BookService, используя Mockito для создания мок-объекта BookRepository.